#include <WiFi.h>
#include <PubSubClient.h>

// LED definition
#define PIN_LED 2

// WiFi
const char *ssid = "Ng-2G"; // Enter your WiFi name
const char *password = "RonnyHuang05";  // Enter WiFi password

// MQTT Broker
const char *mqtt_broker = "192.168.1.229";
const char *topic = "esp32/test";
const int mqtt_port = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  // initialize digital pin PIN_LED as an output
  pinMode(PIN_LED, OUTPUT);
  
   // Set software serial baud to 115200;
   Serial.begin(115200);
   // connecting to a WiFi network
   WiFi.begin(ssid, password);
   while (WiFi.status() != WL_CONNECTED) {
       delay(500);
       Serial.println("Connecting to WiFi..");
   }
   Serial.println("Connected to the WiFi network");
   //connecting to a mqtt broker
   client.setServer(mqtt_broker, mqtt_port);
   client.setCallback(callback);
   while (!client.connected()) {
       String client_id = "esp32-client-";
       client_id += String(WiFi.macAddress());
       Serial.printf("The client %s connects to the mqtt broker\n", client_id.c_str());
       if (client.connect(client_id.c_str())) {
           Serial.println("MQTT broker server connected");
       } else {
           Serial.print("failed with state ");
           Serial.print(client.state());
           Serial.println();
           delay(2000);
       }
 }
 // publish and subscribe
 client.publish(topic, "Hi I'm ESP32 ^^");
 client.subscribe(topic);
}

void callback(char *topic, byte *payload, unsigned int length) {
  Serial.print("Message arrived in topic: ");
  Serial.println(topic);
  Serial.print("Message:");
  for (int i = 0; i < length; i++) {
    Serial.print((char) payload[i]);
    if ((char) payload[i] == '1') {
      digitalWrite(PIN_LED, HIGH);  
    } else if ((char) payload[i] == '2') {
      digitalWrite(PIN_LED, LOW);
    }
 }
 Serial.println();
 Serial.println("-----------------------");
}

void loop() {
 client.loop();
}
